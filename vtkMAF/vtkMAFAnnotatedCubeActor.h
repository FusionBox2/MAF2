/*=========================================================================

  Program:   Visualization Toolkit
  Module:    $RCSfile: vtkMAFAnnotatedCubeActor.h,v $

  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen
  All rights reserved.
  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.

     This software is distributed WITHOUT ANY WARRANTY; without even
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
     PURPOSE.  See the above copyright notice for more information.

=========================================================================*/
/**
Classname: vtkAnnotatedCubeActor - a 3D cube with face labels

Ported from VTK 5 to MAF by Stefano Perticoni
This class is used along with vtkMAFOrientationMarkerWidget to build a render window superimposed rotating cube with
anatomical markers. 

Description:
vtkAnnotatedCubeActor is a hybrid 3D actor used to represent an anatomical
orientation marker in a scene.  The class consists of a 3D unit cube centered
on the origin with each face labelled in correspondance to a particular
coordinate direction.  For example, with Cartesian directions, the user
defined text labels could be: +X, -X, +Y, -Y, +Z, -Z, while for anatomical
directions: A, P, L, R, S, I.  Text is automatically centered on each cube
face and is not restriceted to single characters. In addition to or in
replace of a solid text label representation, the outline edges of the labels
can be displayed.  The individual properties of the cube, face labels
and text outlines can be manipulated as can their visibility.

Caveats:
vtkAnnotatedCubeActor is primarily intended for use with
vtkOrientationMarkerWidget. The cube face text is generated by vtkVectorText
and therefore the font attributes are restricted.

See Also:
vtkAxesActor vtkMAFOrientationMarkerWidget vtkVectorText mafAxes 
*/

#ifndef __vtkMAFAnnotatedCubeActor_h
#define __vtkMAFAnnotatedCubeActor_h

#include "vtkMAFConfigure.h"
#include "vtkAnnotatedCubeActor.h"

class VTK_vtkMAF_EXPORT vtkMAFAnnotatedCubeActor : public vtkAnnotatedCubeActor
{
public:
  static vtkMAFAnnotatedCubeActor *New();
  vtkTypeRevisionMacro(vtkMAFAnnotatedCubeActor,vtkAnnotatedCubeActor);
protected:
  vtkMAFAnnotatedCubeActor();
  ~vtkMAFAnnotatedCubeActor();
private:
  vtkMAFAnnotatedCubeActor(const vtkMAFAnnotatedCubeActor&);  // Not implemented.
  void operator=(const vtkMAFAnnotatedCubeActor&);  // Not implemented.
};

#endif
