/* soapClient.cpp
   Generated by gSOAP 2.7.9b from SrbStorageWS.h
   Copyright(C) 2000-2006, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.9b 2007-08-24 10:29:34 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__SrbList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SrbList *ns1__SrbList, _ns1__SrbListResponse *ns1__SrbListResponse)
{	struct __ns6__SrbList soap_tmp___ns6__SrbList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns6__SrbList.ns1__SrbList = ns1__SrbList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns6__SrbList(soap, &soap_tmp___ns6__SrbList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns6__SrbList(soap, &soap_tmp___ns6__SrbList, "-ns6:SrbList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns6__SrbList(soap, &soap_tmp___ns6__SrbList, "-ns6:SrbList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__SrbListResponse)
		return soap_closesock(soap);
	ns1__SrbListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SrbListResponse->soap_get(soap, "ns1:SrbListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__SrbDownload(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__SrbDownload *ns2__SrbDownload, struct __ns7__SrbDownloadResponse &_param_1)
{	struct __ns7__SrbDownload soap_tmp___ns7__SrbDownload;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap->encodingStyle = NULL;
	soap_tmp___ns7__SrbDownload.ns2__SrbDownload = ns2__SrbDownload;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns7__SrbDownload(soap, &soap_tmp___ns7__SrbDownload);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__SrbDownload(soap, &soap_tmp___ns7__SrbDownload, "-ns7:SrbDownload", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__SrbDownload(soap, &soap_tmp___ns7__SrbDownload, "-ns7:SrbDownload", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default___ns7__SrbDownloadResponse(soap, &_param_1);
  	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ns7__SrbDownloadResponse(soap, &_param_1, "-ns7:SrbDownloadResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__SrbUpload(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns5__SrbUpload *ns5__SrbUpload, struct __ns8__SrbUploadResponse &_param_2)
{	struct __ns8__SrbUpload soap_tmp___ns8__SrbUpload;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:80";
	soap->encodingStyle = NULL;
	soap_tmp___ns8__SrbUpload.ns5__SrbUpload = ns5__SrbUpload;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns8__SrbUpload(soap, &soap_tmp___ns8__SrbUpload);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SrbUpload(soap, &soap_tmp___ns8__SrbUpload, "-ns8:SrbUpload", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SrbUpload(soap, &soap_tmp___ns8__SrbUpload, "-ns8:SrbUpload", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default___ns8__SrbUploadResponse(soap, &_param_2);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ns8__SrbUploadResponse(soap, &_param_2, "-ns8:SrbUploadResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of soapClient.cpp */
